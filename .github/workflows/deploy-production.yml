name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  validate-secrets:
    name: Validate Required Secrets
    runs-on: ubuntu-latest
    outputs:
      has-aws-secrets: ${{ steps.check-secrets.outputs.has-aws-secrets }}
      has-amplify-secrets: ${{ steps.check-secrets.outputs.has-amplify-secrets }}
    steps:
      - name: Check required secrets
        id: check-secrets
        run: |
          if [[ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" && -n "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]]; then
            echo "has-aws-secrets=true" >> $GITHUB_OUTPUT
          else
            echo "has-aws-secrets=false" >> $GITHUB_OUTPUT
          fi
          
          if [[ -n "${{ secrets.AMPLIFY_APP_ID }}" ]]; then
            echo "has-amplify-secrets=true" >> $GITHUB_OUTPUT
          else
            echo "has-amplify-secrets=false" >> $GITHUB_OUTPUT
          fi

  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint --if-present
        continue-on-error: true

      - name: Run tests
        run: npm run test --if-present
        continue-on-error: true

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 30

  deploy-amplify:
    name: Deploy to AWS Amplify
    runs-on: ubuntu-latest
    needs: [validate-secrets, build]
    if: needs.validate-secrets.outputs.has-aws-secrets == 'true' && needs.validate-secrets.outputs.has-amplify-secrets == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}

      - name: Deploy to Amplify
        run: |
          echo "Creating deployment package..."
          cd dist && zip -r ../deployment.zip . && cd ..
          
          echo "Starting Amplify deployment..."
          aws amplify start-deployment \
            --app-id ${{ secrets.AMPLIFY_APP_ID }} \
            --branch-name ${{ github.ref_name }} \
            --source-url "data:application/zip;base64,$(base64 -w 0 deployment.zip)" \
            --output json > deployment-result.json
          
          if [ $? -eq 0 ]; then
            echo "‚úÖ Deployment initiated successfully!"
            cat deployment-result.json
          else
            echo "‚ùå Deployment failed!"
            exit 1
          fi

      - name: Get deployment URL
        run: |
          APP_URL=$(aws amplify get-app --app-id ${{ secrets.AMPLIFY_APP_ID }} --query 'app.defaultDomain' --output text)
          echo "üöÄ Application deployed to: https://$APP_URL"
          echo "APP_URL=https://$APP_URL" >> $GITHUB_ENV

  deploy-fallback:
    name: Deploy to Static Hosting (Fallback)
    runs-on: ubuntu-latest
    needs: [validate-secrets, build]
    if: needs.validate-secrets.outputs.has-aws-secrets == 'false' || needs.validate-secrets.outputs.has-amplify-secrets == 'false'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          cname: ${{ secrets.CUSTOM_DOMAIN }}

      - name: Alternative deployment options
        run: |
          echo "üîß AWS secrets not configured. Consider these deployment options:"
          echo ""
          echo "1. **GitHub Pages**: Enabled above (free for public repos)"
          echo "2. **Netlify**: Add NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID secrets"
          echo "3. **Vercel**: Add VERCEL_TOKEN and VERCEL_PROJECT_ID secrets"
          echo "4. **Firebase**: Add FIREBASE_TOKEN secret"
          echo ""
          echo "For AWS Amplify, add these secrets to your repository:"
          echo "- AWS_ACCESS_KEY_ID"
          echo "- AWS_SECRET_ACCESS_KEY"
          echo "- AMPLIFY_APP_ID"
          echo "- AWS_REGION (optional, defaults to us-east-1)"
          echo ""
          echo "üìÅ Build files are ready in the artifacts."

  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-amplify, deploy-fallback]
    if: always()
    steps:
      - name: Deployment Summary
        run: |
          if [[ "${{ needs.deploy-amplify.result }}" == "success" ]]; then
            echo "‚úÖ AWS Amplify deployment successful!"
          elif [[ "${{ needs.deploy-fallback.result }}" == "success" ]]; then
            echo "‚úÖ Fallback deployment successful!"
          else
            echo "‚ùå Deployment failed. Check the logs above."
          fi
